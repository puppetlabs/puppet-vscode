/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
{
  "env": { "browser": true, "es6": true, "node": true },
  "parser": "@typescript-eslint/parser",
  "parserOptions": { "sourceType": "module" },
  "plugins": ["@typescript-eslint", "prettier"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "rules": {
    "no-return-await": "error",
    "block-scoped-var": "error",
    "default-case": "error",
    "default-case-last": "error",
    "default-param-last": "error",
    "guard-for-in": "error",
    "no-extend-native": "error",
    "no-invalid-this": "error",
    "no-useless-call": "error",
    "no-void": "error",
    "wrap-iife": "error",
    "no-console": "error",
    "no-await-in-loop": "error",
    "no-template-curly-in-string": "error",
    "require-atomic-updates": "error",
    "no-useless-backreference": "error",
    //"@typescript-eslint/class-name-casing": "warn",
    "@typescript-eslint/member-delimiter-style": [
      "warn",
      {
        "multiline": { "delimiter": "semi", "requireLast": true },
        "singleline": { "delimiter": "semi", "requireLast": false }
      }
    ],
    "@typescript-eslint/no-unused-expressions": "warn",
    "@typescript-eslint/semi": ["warn", "always"],
    "@typescript-eslint/interface-name-prefix": "off",
    "curly": "warn",
    "eqeqeq": ["warn", "always"],
    "no-redeclare": "warn",
    "no-throw-literal": "warn"
  }
}
